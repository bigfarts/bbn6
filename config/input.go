package config

import (
	"strings"

	"github.com/hajimehoshi/ebiten/v2"
)

func keyCodeToKeyName(k ebiten.Key) string {
	switch k {
	case ebiten.KeyA:
		return "a"
	case ebiten.KeyB:
		return "b"
	case ebiten.KeyC:
		return "c"
	case ebiten.KeyD:
		return "d"
	case ebiten.KeyE:
		return "e"
	case ebiten.KeyF:
		return "f"
	case ebiten.KeyG:
		return "g"
	case ebiten.KeyH:
		return "h"
	case ebiten.KeyI:
		return "i"
	case ebiten.KeyJ:
		return "j"
	case ebiten.KeyK:
		return "k"
	case ebiten.KeyL:
		return "l"
	case ebiten.KeyM:
		return "m"
	case ebiten.KeyN:
		return "n"
	case ebiten.KeyO:
		return "o"
	case ebiten.KeyP:
		return "p"
	case ebiten.KeyQ:
		return "q"
	case ebiten.KeyR:
		return "r"
	case ebiten.KeyS:
		return "s"
	case ebiten.KeyT:
		return "t"
	case ebiten.KeyU:
		return "u"
	case ebiten.KeyV:
		return "v"
	case ebiten.KeyW:
		return "w"
	case ebiten.KeyX:
		return "x"
	case ebiten.KeyY:
		return "y"
	case ebiten.KeyZ:
		return "z"
	case ebiten.KeyAlt:
		return "alt"
	case ebiten.KeyAltLeft:
		return "altleft"
	case ebiten.KeyAltRight:
		return "altright"
	case ebiten.KeyArrowDown:
		return "arrowdown"
	case ebiten.KeyArrowLeft:
		return "arrowleft"
	case ebiten.KeyArrowRight:
		return "arrowright"
	case ebiten.KeyArrowUp:
		return "arrowup"
	case ebiten.KeyBackquote:
		return "backquote"
	case ebiten.KeyBackslash:
		return "backslash"
	case ebiten.KeyBackspace:
		return "backspace"
	case ebiten.KeyBracketLeft:
		return "bracketleft"
	case ebiten.KeyBracketRight:
		return "bracketright"
	case ebiten.KeyCapsLock:
		return "capslock"
	case ebiten.KeyComma:
		return "comma"
	case ebiten.KeyContextMenu:
		return "contextmenu"
	case ebiten.KeyControl:
		return "control"
	case ebiten.KeyControlLeft:
		return "controlleft"
	case ebiten.KeyControlRight:
		return "controlright"
	case ebiten.KeyDelete:
		return "delete"
	case ebiten.KeyDigit0:
		return "digit0"
	case ebiten.KeyDigit1:
		return "digit1"
	case ebiten.KeyDigit2:
		return "digit2"
	case ebiten.KeyDigit3:
		return "digit3"
	case ebiten.KeyDigit4:
		return "digit4"
	case ebiten.KeyDigit5:
		return "digit5"
	case ebiten.KeyDigit6:
		return "digit6"
	case ebiten.KeyDigit7:
		return "digit7"
	case ebiten.KeyDigit8:
		return "digit8"
	case ebiten.KeyDigit9:
		return "digit9"
	case ebiten.KeyEnd:
		return "end"
	case ebiten.KeyEnter:
		return "enter"
	case ebiten.KeyEqual:
		return "equal"
	case ebiten.KeyEscape:
		return "escape"
	case ebiten.KeyF1:
		return "f1"
	case ebiten.KeyF2:
		return "f2"
	case ebiten.KeyF3:
		return "f3"
	case ebiten.KeyF4:
		return "f4"
	case ebiten.KeyF5:
		return "f5"
	case ebiten.KeyF6:
		return "f6"
	case ebiten.KeyF7:
		return "f7"
	case ebiten.KeyF8:
		return "f8"
	case ebiten.KeyF9:
		return "f9"
	case ebiten.KeyF10:
		return "f10"
	case ebiten.KeyF11:
		return "f11"
	case ebiten.KeyF12:
		return "f12"
	case ebiten.KeyHome:
		return "home"
	case ebiten.KeyInsert:
		return "insert"
	case ebiten.KeyMeta:
		return "meta"
	case ebiten.KeyMetaLeft:
		return "metaleft"
	case ebiten.KeyMetaRight:
		return "metaright"
	case ebiten.KeyMinus:
		return "minus"
	case ebiten.KeyNumLock:
		return "numlock"
	case ebiten.KeyNumpad0:
		return "numpad0"
	case ebiten.KeyNumpad1:
		return "numpad1"
	case ebiten.KeyNumpad2:
		return "numpad2"
	case ebiten.KeyNumpad3:
		return "numpad3"
	case ebiten.KeyNumpad4:
		return "numpad4"
	case ebiten.KeyNumpad5:
		return "numpad5"
	case ebiten.KeyNumpad6:
		return "numpad6"
	case ebiten.KeyNumpad7:
		return "numpad7"
	case ebiten.KeyNumpad8:
		return "numpad8"
	case ebiten.KeyNumpad9:
		return "numpad9"
	case ebiten.KeyNumpadAdd:
		return "numpadadd"
	case ebiten.KeyNumpadDecimal:
		return "numpaddecimal"
	case ebiten.KeyNumpadDivide:
		return "numpaddivide"
	case ebiten.KeyNumpadEnter:
		return "numpadenter"
	case ebiten.KeyNumpadEqual:
		return "numpadequal"
	case ebiten.KeyNumpadMultiply:
		return "numpadmultiply"
	case ebiten.KeyNumpadSubtract:
		return "numpadsubtract"
	case ebiten.KeyPageDown:
		return "pagedown"
	case ebiten.KeyPageUp:
		return "pageup"
	case ebiten.KeyPause:
		return "pause"
	case ebiten.KeyPeriod:
		return "period"
	case ebiten.KeyPrintScreen:
		return "printscreen"
	case ebiten.KeyQuote:
		return "quote"
	case ebiten.KeyScrollLock:
		return "scrolllock"
	case ebiten.KeySemicolon:
		return "semicolon"
	case ebiten.KeyShift:
		return "shift"
	case ebiten.KeyShiftLeft:
		return "shiftleft"
	case ebiten.KeyShiftRight:
		return "shiftright"
	case ebiten.KeySlash:
		return "slash"
	case ebiten.KeySpace:
		return "space"
	case ebiten.KeyTab:
		return "tab"
	}
	return ""
}

func keyNameToKeyCode(name string) ebiten.Key {
	switch strings.ToLower(name) {
	case "0":
		return ebiten.Key0
	case "1":
		return ebiten.Key1
	case "2":
		return ebiten.Key2
	case "3":
		return ebiten.Key3
	case "4":
		return ebiten.Key4
	case "5":
		return ebiten.Key5
	case "6":
		return ebiten.Key6
	case "7":
		return ebiten.Key7
	case "8":
		return ebiten.Key8
	case "9":
		return ebiten.Key9
	case "a":
		return ebiten.KeyA
	case "b":
		return ebiten.KeyB
	case "c":
		return ebiten.KeyC
	case "d":
		return ebiten.KeyD
	case "e":
		return ebiten.KeyE
	case "f":
		return ebiten.KeyF
	case "g":
		return ebiten.KeyG
	case "h":
		return ebiten.KeyH
	case "i":
		return ebiten.KeyI
	case "j":
		return ebiten.KeyJ
	case "k":
		return ebiten.KeyK
	case "l":
		return ebiten.KeyL
	case "m":
		return ebiten.KeyM
	case "n":
		return ebiten.KeyN
	case "o":
		return ebiten.KeyO
	case "p":
		return ebiten.KeyP
	case "q":
		return ebiten.KeyQ
	case "r":
		return ebiten.KeyR
	case "s":
		return ebiten.KeyS
	case "t":
		return ebiten.KeyT
	case "u":
		return ebiten.KeyU
	case "v":
		return ebiten.KeyV
	case "w":
		return ebiten.KeyW
	case "x":
		return ebiten.KeyX
	case "y":
		return ebiten.KeyY
	case "z":
		return ebiten.KeyZ
	case "alt":
		return ebiten.KeyAlt
	case "altleft":
		return ebiten.KeyAltLeft
	case "altright":
		return ebiten.KeyAltRight
	case "apostrophe":
		return ebiten.KeyApostrophe
	case "arrowdown":
		return ebiten.KeyArrowDown
	case "arrowleft":
		return ebiten.KeyArrowLeft
	case "arrowright":
		return ebiten.KeyArrowRight
	case "arrowup":
		return ebiten.KeyArrowUp
	case "backquote":
		return ebiten.KeyBackquote
	case "backslash":
		return ebiten.KeyBackslash
	case "backspace":
		return ebiten.KeyBackspace
	case "bracketleft":
		return ebiten.KeyBracketLeft
	case "bracketright":
		return ebiten.KeyBracketRight
	case "capslock":
		return ebiten.KeyCapsLock
	case "comma":
		return ebiten.KeyComma
	case "contextmenu":
		return ebiten.KeyContextMenu
	case "control":
		return ebiten.KeyControl
	case "controlleft":
		return ebiten.KeyControlLeft
	case "controlright":
		return ebiten.KeyControlRight
	case "delete":
		return ebiten.KeyDelete
	case "digit0":
		return ebiten.KeyDigit0
	case "digit1":
		return ebiten.KeyDigit1
	case "digit2":
		return ebiten.KeyDigit2
	case "digit3":
		return ebiten.KeyDigit3
	case "digit4":
		return ebiten.KeyDigit4
	case "digit5":
		return ebiten.KeyDigit5
	case "digit6":
		return ebiten.KeyDigit6
	case "digit7":
		return ebiten.KeyDigit7
	case "digit8":
		return ebiten.KeyDigit8
	case "digit9":
		return ebiten.KeyDigit9
	case "down":
		return ebiten.KeyDown
	case "end":
		return ebiten.KeyEnd
	case "enter":
		return ebiten.KeyEnter
	case "equal":
		return ebiten.KeyEqual
	case "escape":
		return ebiten.KeyEscape
	case "f1":
		return ebiten.KeyF1
	case "f2":
		return ebiten.KeyF2
	case "f3":
		return ebiten.KeyF3
	case "f4":
		return ebiten.KeyF4
	case "f5":
		return ebiten.KeyF5
	case "f6":
		return ebiten.KeyF6
	case "f7":
		return ebiten.KeyF7
	case "f8":
		return ebiten.KeyF8
	case "f9":
		return ebiten.KeyF9
	case "f10":
		return ebiten.KeyF10
	case "f11":
		return ebiten.KeyF11
	case "f12":
		return ebiten.KeyF12
	case "graveaccent":
		return ebiten.KeyGraveAccent
	case "home":
		return ebiten.KeyHome
	case "insert":
		return ebiten.KeyInsert
	case "kp0":
		return ebiten.KeyKP0
	case "kp1":
		return ebiten.KeyKP1
	case "kp2":
		return ebiten.KeyKP2
	case "kp3":
		return ebiten.KeyKP3
	case "kp4":
		return ebiten.KeyKP4
	case "kp5":
		return ebiten.KeyKP5
	case "kp6":
		return ebiten.KeyKP6
	case "kp7":
		return ebiten.KeyKP7
	case "kp8":
		return ebiten.KeyKP8
	case "kp9":
		return ebiten.KeyKP9
	case "kpdecimal":
		return ebiten.KeyKPDecimal
	case "kpdivide":
		return ebiten.KeyKPDivide
	case "kpenter":
		return ebiten.KeyKPEnter
	case "kpequal":
		return ebiten.KeyKPEqual
	case "kpmultiply":
		return ebiten.KeyKPMultiply
	case "kpsubtract":
		return ebiten.KeyKPSubtract
	case "left":
		return ebiten.KeyLeft
	case "leftbracket":
		return ebiten.KeyLeftBracket
	case "menu":
		return ebiten.KeyMenu
	case "meta":
		return ebiten.KeyMeta
	case "metaleft":
		return ebiten.KeyMetaLeft
	case "metaright":
		return ebiten.KeyMetaRight
	case "minus":
		return ebiten.KeyMinus
	case "numlock":
		return ebiten.KeyNumLock
	case "numpad0":
		return ebiten.KeyNumpad0
	case "numpad1":
		return ebiten.KeyNumpad1
	case "numpad2":
		return ebiten.KeyNumpad2
	case "numpad3":
		return ebiten.KeyNumpad3
	case "numpad4":
		return ebiten.KeyNumpad4
	case "numpad5":
		return ebiten.KeyNumpad5
	case "numpad6":
		return ebiten.KeyNumpad6
	case "numpad7":
		return ebiten.KeyNumpad7
	case "numpad8":
		return ebiten.KeyNumpad8
	case "numpad9":
		return ebiten.KeyNumpad9
	case "numpadadd":
		return ebiten.KeyNumpadAdd
	case "numpaddecimal":
		return ebiten.KeyNumpadDecimal
	case "numpaddivide":
		return ebiten.KeyNumpadDivide
	case "numpadenter":
		return ebiten.KeyNumpadEnter
	case "numpadequal":
		return ebiten.KeyNumpadEqual
	case "numpadmultiply":
		return ebiten.KeyNumpadMultiply
	case "numpadsubtract":
		return ebiten.KeyNumpadSubtract
	case "pagedown":
		return ebiten.KeyPageDown
	case "pageup":
		return ebiten.KeyPageUp
	case "pause":
		return ebiten.KeyPause
	case "period":
		return ebiten.KeyPeriod
	case "printscreen":
		return ebiten.KeyPrintScreen
	case "quote":
		return ebiten.KeyQuote
	case "right":
		return ebiten.KeyRight
	case "rightbracket":
		return ebiten.KeyRightBracket
	case "scrolllock":
		return ebiten.KeyScrollLock
	case "semicolon":
		return ebiten.KeySemicolon
	case "shift":
		return ebiten.KeyShift
	case "shiftleft":
		return ebiten.KeyShiftLeft
	case "shiftright":
		return ebiten.KeyShiftRight
	case "slash":
		return ebiten.KeySlash
	case "space":
		return ebiten.KeySpace
	case "tab":
		return ebiten.KeyTab
	case "up":
		return ebiten.KeyUp
	}
	return 0
}
