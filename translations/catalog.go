// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"ja_JP": &dictionary{index: ja_JPIndex, data: ja_JPData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"ENTER_MATCHMAKING_CODE": 1,
	"SELECT_ROM":             0,
}

var en_USIndex = []uint32{ // 3 elements
	0x00000000, 0x0000008d, 0x000000e3,
} // Size: 36 bytes

const en_USData string = "" + // Size: 227 bytes
	"\x02Select a game to start below.\x0a\x0aIf the list is empty, remember " +
	"to put your ROMs in the \x22roms\x22 directory (and saves in the \x22sav" +
	"es\x22 directory)!\x02Enter a link code that you and your partner have d" +
	"ecided on to connect to each other:"

var ja_JPIndex = []uint32{ // 3 elements
	0x00000000, 0x000000ed, 0x00000172,
} // Size: 36 bytes

const ja_JPData string = "" + // Size: 370 bytes
	"\x02下記より開始するゲームを選択してください。\x0a\x0a以下のリストが空の場合は、「roms」ディレクトリにROMファイルを、「sav" +
	"es」ディレクトリにセーブファイルを置いてください。\x02お互いに接続するために、あなたとパートナーが決めたリンクコードを以下に入力してくださ" +
	"い。"

	// Total table size 669 bytes (0KiB); checksum: 6F460D93
